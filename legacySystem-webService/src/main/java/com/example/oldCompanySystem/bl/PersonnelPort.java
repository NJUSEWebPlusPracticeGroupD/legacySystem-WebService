
package com.example.oldCompanySystem.bl;

import com.example.oldCompanySystem.Entity.PersonnelEntity.*;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "PersonnelPort", targetNamespace = "http://www.oldSystem.com/wsdl")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface  PersonnelPort {


    /**
     * 
     * @param getAllPersonnelInfosParam
     * @return
     *     returns PersonnelEntity.PersonnelInfoList
     */
    @WebMethod(action = "personnel/getAllPersonnelInfos")
    @WebResult(name = "personnelInfoList", targetNamespace = "http://www.oldCompany.com/personnel", partName = "personnelInfoList")
    @Action(input = "personnel/getAllPersonnelInfosRequest", output = "personnel/getAllPersonnelInfosResponse")
    public PersonnelInfoList getAllPersonnelInfos(
            @WebParam(name = "getAllPersonnelInfosParam", targetNamespace = "http://www.oldCompany.com/personnel", partName = "getAllPersonnelInfosParam")
                    String getAllPersonnelInfosParam);

    /**
     *
     * @param getPersonnelInfoByIdParam
     * @return
     *     returns PersonnelEntity.PersonnelInfoType
     * @throws PersonnelDoesNotExistFault
     */
    @WebMethod(action = "personnel/getPersonnelInfoById")
    @WebResult(name = "personnelInfo", targetNamespace = "http://www.oldCompany.com/personnel", partName = "personnelInfo")
    @Action(input = "personnel/getPersonnelInfoByIdRequest", output = "personnel/getPersonnelInfoByIdResponse", fault = {
        @FaultAction(className = PersonnelDoesNotExistFault.class, value = "personnel/PersonnelDoesNotExistFault")
    })
    public PersonnelInfoType getPersonnelInfoById(
            @WebParam(name = "getPersonnelInfoByIdParam", targetNamespace = "http://www.oldCompany.com/personnel", partName = "getPersonnelInfoByIdParam")
                    GetPersonnelInfoByIdParamType getPersonnelInfoByIdParam)
        throws PersonnelDoesNotExistFault
    ;

    /**
     *
     * @param getPersonnelInfoByNameParam
     * @return
     *     returns PersonnelEntity.PersonnelInfoType
     * @throws PersonnelDoesNotExistFault
     */
    @WebMethod(action = "personnel/getPersonnelInfoByName")
    @WebResult(name = "personnelInfo", targetNamespace = "http://www.oldCompany.com/personnel", partName = "personnelInfo")
    @Action(input = "personnel/getPersonnelInfoByNameRequest", output = "personnel/getPersonnelInfoByNameResponse", fault = {
        @FaultAction(className = PersonnelDoesNotExistFault.class, value = "personnel/PersonnelDoesNotExistFault")
    })
    public PersonnelInfoType getPersonnelInfoByName(
            @WebParam(name = "getPersonnelInfoByNameParam", targetNamespace = "http://www.oldCompany.com/personnel", partName = "getPersonnelInfoByNameParam")
                    GetPersonnelInfoByNameParamType getPersonnelInfoByNameParam)
        throws PersonnelDoesNotExistFault
    ;

    /**
     *
     * @param getPersonnelRoleByIdParam
     * @return
     *     returns PersonnelEntity.RoleType
     * @throws PersonnelDoesNotExistFault
     */
    @WebMethod(action = "personnel/getPersonnelRoleById")
    @WebResult(name = "personnelRole", targetNamespace = "http://www.oldCompany.com/personnel", partName = "personnelRole")
    @Action(input = "personnel/getPersonnelRoleByIdRequest", output = "personnel/getPersonnelRoleByIdResponse", fault = {
        @FaultAction(className = PersonnelDoesNotExistFault.class, value = "personnel/PersonnelDoesNotExistFault")
    })
    public RoleType getPersonnelRoleById(
            @WebParam(name = "getPersonnelRoleByIdParam", targetNamespace = "http://www.oldCompany.com/personnel", partName = "getPersonnelRoleByIdParam")
                    GetPersonnelRoleByIdParamType getPersonnelRoleByIdParam)
        throws PersonnelDoesNotExistFault
    ;

    /**
     *
     * @param getPersonnelRoleByNameParam
     * @return
     *     returns PersonnelEntity.RoleType
     * @throws PersonnelDoesNotExistFault
     */
    @WebMethod(action = "personnel/getPersonnelRoleByName")
    @WebResult(name = "personnelRole", targetNamespace = "http://www.oldCompany.com/personnel", partName = "personnelRole")
    @Action(input = "personnel/getPersonnelRoleByNameRequest", output = "personnel/getPersonnelRoleByNameResponse", fault = {
        @FaultAction(className = PersonnelDoesNotExistFault.class, value = "personnel/PersonnelDoesNotExistFault")
    })
    public RoleType getPersonnelRoleByName(
            @WebParam(name = "getPersonnelRoleByNameParam", targetNamespace = "http://www.oldCompany.com/personnel", partName = "getPersonnelRoleByNameParam")
                    GetPersonnelRoleByNameParamType getPersonnelRoleByNameParam)
        throws PersonnelDoesNotExistFault
    ;

}
